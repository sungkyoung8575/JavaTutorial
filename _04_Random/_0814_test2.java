package _04_Random;

public class _0814_test2 {

	public static void main(String[] args) {
//		게임을 만들어 보자
		int[] road = {0,1,0,0,0,1,0,0,2,0,0,0,0,2,0,0,0,4,0,0,0,4,0,0,0,1,7,0,0,3,0,0,7,0,0,8,0,0,1,3,0,0,1,0};
		int me=-1;

		//주사위 게임 만들기
		// if 
		// for continue, break
		// 한 사람이 게임을 하며 끝까지 통과한 거리를 계산한다. 배열의 한칸이 거리이며 +1이다.
		// 주사위가 아닌 다른 미션에 의해 도착점이 변경되면 도착점에 미션번호의 영향을 받지 않는다.
		// 엔터를 치면 게임자는 주사위를 던진다.

//		sysout("[엔터키] 주사위를 던지세요");
//		in.nextLine();  // 엔터키를 치면 자동으로 다음 코드로 넘어간다. (Scanner in = new Scanner(System.in);
//		sysout("위 코드에서는 엔터키가 입력되어 이 코드가 실행됨");
//
//		1. 시작점은 배열인덱스 0이며, 끝은 배열의 마지막 인덱스이다.
//		2. 주사위를 던진다. 주사위는 1-6까지 이다. 주사위 만큼 거리를 걸어 간다.
//		3. 도착한 곳 배열의 값이 1일 경우는 뒤로 한 칸을 간다.
//		4. 도착한 곳 배열의 값이 2일 경우는 앞으로 한 칸을 간다. 
//		5. 도착한 곳 배열의 값이 7일 경우는 처음으로(me=-1)돌아 간다. 
//		6. 배열의 끝까지 완주하면 그동안 지나온 거리의 합을 출력한다. 
//
//		// 업그레이드
//		7. 도착한 곳 배열의 값이 3일 경우는 컴퓨터랑 가위바위보를 해서
//		   이기면 앞으로 한칸. 지면 뒤로 한칸, 비기면 제자리에 있는다.
//		8. 도착한 곳 배열의 값이 4일 경우는 랜덤한 숫자를 뽑아서 짝수면 앞으로 3칸, 홀수이면 뒤로 2칸을 간다. 
//		9. 도착한 곳 배열의 값이 8일 경우 업다운게임(3번기회)을 해서 이기면 앞으로 5칸, 지면 뒤로 3칸을 간다.

	}

}
